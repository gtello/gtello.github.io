<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Proyectos on Gabriel Tello</title>
    <link>https://gtello.github.io/es/projects/</link>
    <description>Recent content in Proyectos on Gabriel Tello</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-EC</language>
    <managingEditor>gabrieltello10@hotmail.com (Gabriel Tello)</managingEditor>
    <webMaster>gabrieltello10@hotmail.com (Gabriel Tello)</webMaster>
    <copyright>[Gabriel Tello](https://github.com/gtello) © 2024</copyright>
    <lastBuildDate>Fri, 13 Dec 2024 17:10:00 +0000</lastBuildDate>
    <atom:link href="https://gtello.github.io/es/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Instalando Zabbix con Alta Disponibilidad</title>
      <link>https://gtello.github.io/es/projects/installing-zabbix/</link>
      <pubDate>Fri, 13 Dec 2024 17:10:00 +0000</pubDate><author>gabrieltello10@hotmail.com (Gabriel Tello)</author>
      <guid>https://gtello.github.io/es/projects/installing-zabbix/</guid>
      <description>&lt;div style=&#34;text-align: justify;&#34;&gt;  &#xD;&#xA;&lt;p&gt;En este proyecto, vamos a instalar el servidor Zabbix y configurarlo con alta disponibilidad (HA). Zabbix es una potente solución de monitoreo de código abierto utilizada para hacer seguimiento al rendimiento y la disponibilidad de los sistemas informáticos. Al final de esta guía, tendrás un servidor Zabbix completamente funcional configurado con alta disponibilidad (HA), asegurando un monitoreo continuo incluso en caso de fallo del servidor.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;En resumen, en este proyecto vamos a:&lt;/strong&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<div style="text-align: justify;">  
<p>En este proyecto, vamos a instalar el servidor Zabbix y configurarlo con alta disponibilidad (HA). Zabbix es una potente solución de monitoreo de código abierto utilizada para hacer seguimiento al rendimiento y la disponibilidad de los sistemas informáticos. Al final de esta guía, tendrás un servidor Zabbix completamente funcional configurado con alta disponibilidad (HA), asegurando un monitoreo continuo incluso en caso de fallo del servidor.</p>
<p><strong>En resumen, en este proyecto vamos a:</strong></p>
<ul>
<li>Instalar el servidor Zabbix.</li>
<li>Configurar el frontend de Zabbix para el monitoreo.</li>
<li>Habilitar la alta disponibilidad (HA) del servidor Zabbix para tolerancia a fallos.</li>
</ul>
<h2 id="requisitos-técnicos">Requisitos técnicos</h2>
<p>Comenzaremos este proyecto con una máquina virtual Linux nueva. Puedes elegir una distribución Linux basada en RHEL o Debian. Luego configuraremos un servidor Zabbix desde cero en este host.</p>
<p>Utilizaré Rocky Linux 9 y Ubuntu 24.04 en mis ejemplos.</p>
<p>Aquí hay una tabla con los requisitos de hardware para máquinas virtuales según la documentación de Zabbix:</p>
<table>
  <thead>
      <tr>
          <th style="text-align: left"><strong>Tamaño de Instalación</strong></th>
          <th style="text-align: left"><strong>Métricas Monitoreadas</strong></th>
          <th style="text-align: left"><strong>Núcleos CPU/vCPU</strong></th>
          <th style="text-align: left"><strong>Memoria (GiB)</strong></th>
          <th style="text-align: left"><strong>Base de Datos</strong></th>
          <th style="text-align: left"><strong>Tipo de Instancia EC2 de Amazon</strong></th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">Pequeño</td>
          <td style="text-align: left">1,000</td>
          <td style="text-align: left">2</td>
          <td style="text-align: left">8</td>
          <td style="text-align: left">MySQL Server, Percona Server, MariaDB Server, PostgreSQL</td>
          <td style="text-align: left">m6i.large / m6g.large</td>
      </tr>
      <tr>
          <td style="text-align: left">Mediano</td>
          <td style="text-align: left">10,000</td>
          <td style="text-align: left">4</td>
          <td style="text-align: left">16</td>
          <td style="text-align: left">MySQL Server, Percona Server, MariaDB Server, PostgreSQL</td>
          <td style="text-align: left">m6i.xlarge / m6g.xlarge</td>
      </tr>
      <tr>
          <td style="text-align: left">Grande</td>
          <td style="text-align: left">100,000</td>
          <td style="text-align: left">16</td>
          <td style="text-align: left">64</td>
          <td style="text-align: left">MySQL Server, Percona Server, MariaDB Server, PostgreSQL</td>
          <td style="text-align: left">m6i.4xlarge / m6g.4xlarge</td>
      </tr>
      <tr>
          <td style="text-align: left">Muy grande</td>
          <td style="text-align: left">1,000,000</td>
          <td style="text-align: left">32</td>
          <td style="text-align: left">96</td>
          <td style="text-align: left">MySQL Server, Percona Server, MariaDB Server, PostgreSQL</td>
          <td style="text-align: left">m6i.8xlarge / m6g.xlarge</td>
      </tr>
  </tbody>
</table>
<p><strong>1 Métrica = 1 Elemento + 1 Disparador + 1 Gráfico</strong></p>
<p>Por ejemplo, monitorear una métrica de CPU implicaría crear:</p>
<ul>
<li><strong>1 Elemento</strong> para recopilar los datos (por ejemplo, uso de CPU).</li>
<li><strong>1 Disparador</strong> para alertar cuando el uso de CPU exceda un umbral.</li>
<li><strong>1 Gráfico</strong> para visualizar el uso de CPU a lo largo del tiempo.<br>
Estos componentes cuentan colectivamente como una métrica.</li>
</ul>
<h2 id="instalando-el-servidor-zabbix">Instalando el Servidor Zabbix</h2>
<p>Antes de instalar el servidor Zabbix, debemos cumplir algunos requisitos previos. Usaremos MariaDB, ya que es popular y tiene mucha documentación disponible para usar con Zabbix. Ejecuta estos comandos como root.</p>
<ol>
<li>
<p><strong>Agregar el repositorio de Zabbix 7.0 a tu sistema</strong><br>
Para sistemas basados en RHEL:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">rpm -Uvh https://repo.zabbix.com/zabbix/7.0/rocky/9/x86_64/zabbix-release-7.0-2.el9.noarch.rpm  
</span></span><span class="line"><span class="ln">2</span><span class="cl">dnf clean all  </span></span></code></pre></div><p>Para sistemas basados en Ubuntu:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">wget https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_7.0-1+ubuntu22.04_all.deb  
</span></span><span class="line"><span class="ln">2</span><span class="cl">dpkg -i zabbix-release_7.0-1+ubuntu22.04_all.deb  
</span></span><span class="line"><span class="ln">3</span><span class="cl">apt update  </span></span></code></pre></div></li>
<li>
<p><strong>Eliminar los paquetes del repositorio EPEL de Zabbix (si están instalados) en sistemas RHEL:</strong><br>
Edita el archivo:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">vim /etc/yum.repos.d/epel.repo  </span></span></code></pre></div><p>Agrega la siguiente línea:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="ln">1</span><span class="cl"><span class="na">[epel]  </span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="na">...  </span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="na">excludepkgs</span><span class="o">=</span><span class="s">zabbix*  </span></span></span></code></pre></div></li>
<li>
<p><strong>Agregar el repositorio de MariaDB:</strong></p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">wget https://downloads.mariadb.com/MariaDB/mariadb_repo_setup  
</span></span><span class="line"><span class="ln">2</span><span class="cl">chmod +x mariadb_repo_setup  
</span></span><span class="line"><span class="ln">3</span><span class="cl">./mariadb_repo_setup  </span></span></code></pre></div></li>
<li>
<p><strong>Instalar y habilitar MariaDB:</strong><br>
Para sistemas basados en RHEL:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">dnf install mariadb-server  
</span></span><span class="line"><span class="ln">2</span><span class="cl">systemctl <span class="nb">enable</span> mariadb  
</span></span><span class="line"><span class="ln">3</span><span class="cl">systemctl start mariadb  </span></span></code></pre></div><p>Para sistemas basados en Ubuntu:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">apt install mariadb-server  
</span></span><span class="line"><span class="ln">2</span><span class="cl">systemctl <span class="nb">enable</span> mariadb  
</span></span><span class="line"><span class="ln">3</span><span class="cl">systemctl start mariadb  </span></span></code></pre></div></li>
<li>
<p><strong>Asegurar tu instalación de MariaDB:</strong></p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">mariadb-secure-installation  </span></span></code></pre></div></li>
<li>
<p><strong>Instalar el servidor Zabbix con soporte MySQL:</strong><br>
Para sistemas basados en RHEL:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">dnf install zabbix-server-mysql zabbix-sql-scripts zabbix-selinux-policy  </span></span></code></pre></div><p>Para sistemas basados en Ubuntu:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">apt install zabbix-server-mysql zabbix-sql-scripts  </span></span></code></pre></div></li>
<li>
<p><strong>Crear la base de datos de Zabbix:</strong><br>
Inicia sesión en MariaDB:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">mysql -u root -p  </span></span></code></pre></div><p>Crea la base de datos y el usuario:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="ln">1</span><span class="cl"><span class="k">create</span><span class="w"> </span><span class="k">database</span><span class="w"> </span><span class="n">zabbix</span><span class="w"> </span><span class="nb">character</span><span class="w"> </span><span class="k">set</span><span class="w"> </span><span class="n">utf8mb4</span><span class="w"> </span><span class="k">collate</span><span class="w"> </span><span class="n">utf8mb4_bin</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="w"></span><span class="k">create</span><span class="w"> </span><span class="k">user</span><span class="w"> </span><span class="n">zabbix</span><span class="o">@</span><span class="n">localhost</span><span class="w"> </span><span class="n">identified</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="s1">&#39;password&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="w"></span><span class="k">grant</span><span class="w"> </span><span class="k">all</span><span class="w"> </span><span class="k">privileges</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">zabbix</span><span class="p">.</span><span class="o">*</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="n">zabbix</span><span class="o">@</span><span class="n">localhost</span><span class="w"> </span><span class="n">identified</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="s1">&#39;password&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="w"></span><span class="k">set</span><span class="w"> </span><span class="k">global</span><span class="w"> </span><span class="n">log_bin_trust_function_creators</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln">5</span><span class="cl"><span class="w"></span><span class="n">quit</span><span class="p">;</span><span class="w">  </span></span></span></code></pre></div></li>
<li>
<p><strong>Importar el esquema de la base de datos de Zabbix:</strong></p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz <span class="p">|</span> mariadb --default-character-set<span class="o">=</span>utf8mb4 -u zabbix -p zabbix  </span></span></code></pre></div></li>
<li>
<p><strong>Deshabilitar <code>log_bin_trust_function_creators</code>:</strong></p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">mysql -u root -p  
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="nb">set</span> global <span class="nv">log_bin_trust_function_creators</span> <span class="o">=</span> 0<span class="p">;</span>  
</span></span><span class="line"><span class="ln">3</span><span class="cl">quit<span class="p">;</span>  </span></span></code></pre></div></li>
<li>
<p><strong>Configurar el servidor Zabbix:</strong><br>
Edita el archivo de configuración:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">vim /etc/zabbix/zabbix_server.conf  </span></span></code></pre></div><p>Actualiza los ajustes de la base de datos:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="ln">1</span><span class="cl"><span class="na">DBName</span><span class="o">=</span><span class="s">zabbix  </span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="na">DBUser</span><span class="o">=</span><span class="s">zabbix  </span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="na">DBPassword</span><span class="o">=</span><span class="s">password  </span></span></span></code></pre></div></li>
<li>
<p><strong>Iniciar el servidor Zabbix:</strong></p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">systemctl <span class="nb">enable</span> zabbix-server  
</span></span><span class="line"><span class="ln">2</span><span class="cl">systemctl start zabbix-server  </span></span></code></pre></div><p>Verifica el estado del servidor:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">systemctl status zabbix-server  
</span></span><span class="line"><span class="ln">2</span><span class="cl">tail -f /var/log/zabbix/zabbix_server.log  </span></span></code></pre></div></li>
</ol>
<h2 id="configurando-el-frontend-de-zabbix">Configurando el Frontend de Zabbix</h2>
<p>Utilizaremos Nginx para configurar el frontend de Zabbix.</p>
<ol>
<li>
<p><strong>Instalar el frontend:</strong><br>
Para sistemas basados en RHEL:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">dnf module switch-to php:8.3  
</span></span><span class="line"><span class="ln">2</span><span class="cl">dnf install zabbix-web-mysql zabbix-nginx-conf  </span></span></code></pre></div><p>Para sistemas basados en Ubuntu:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">apt install zabbix-frontend-php zabbix-nginx-conf  </span></span></code></pre></div></li>
<li>
<p><strong>Configurar NGINX:</strong><br>
Edita el archivo de configuración:<br>
Para sistemas RHEL:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">vim /etc/nginx/conf.d/zabbix.conf  </span></span></code></pre></div><p>Para sistemas Ubuntu:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">vim /etc/zabbix/nginx.conf  </span></span></code></pre></div><p>Actualiza la configuración:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="ln">1</span><span class="cl"><span class="na">listen 80;  </span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="na">server_name 192.168.0.50;  </span></span></span></code></pre></div></li>
<li>
<p><strong>Reiniciar los servicios:</strong><br>
Para sistemas RHEL:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">systemctl <span class="nb">enable</span> nginx php-fpm  
</span></span><span class="line"><span class="ln">2</span><span class="cl">systemctl restart nginx php-fpm  </span></span></code></pre></div><p>Para sistemas Ubuntu:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">systemctl <span class="nb">enable</span> nginx  
</span></span><span class="line"><span class="ln">2</span><span class="cl">systemctl restart nginx php-fpm  </span></span></code></pre></div></li>
<li>
<p><strong>Acceder al frontend en tu navegador:</strong><br>
Navega a:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="ln">1</span><span class="cl">http://&lt;tu_ip_del_servidor&gt;/  </span></span></code></pre></div></li>
<li>
<p><strong>Completa la instalación en el navegador:</strong><br>
Deberías ver la pantalla de bienvenida de Zabbix, simplemente sigue las instrucciones para configurar los detalles de la base de datos y el servidor.</p>
</li>
</ol>
<p><img alt="Panel de Zabbix" src="/images/posts/installing-zabbix/zabbix-dashboard.png"> <center><b>Panel de Zabbix</b></center></p>
<p>Ahora que hemos instalado nuestro frontend de Zabbix, nuestra configuración está completa y estamos listos para empezar a trabajar con él. Nuestro frontend se conectará a nuestra base de datos para editar los valores de configuración de nuestra instalación, como se muestra en el siguiente diagrama:</p>
<p><img alt="Diagrama de Zabbix" src="/images/posts/installing-zabbix/zabbix-diagram.png"><br>
<br></p>
<h1 id="habilitando-alta-disponibilidad-ha-en-zabbix">Habilitando Alta Disponibilidad (HA) en Zabbix</h1>
<p>Introducida en Zabbix 6, la función de Alta Disponibilidad (HA) permite un monitoreo continuo a través de una configuración de clúster activo/pasivo. Esto asegura una operación continua incluso si falla un servidor Zabbix.</p>
<h3 id="características-principales-de-la-ha-de-zabbix">Características principales de la HA de Zabbix:</h3>
<ul>
<li>Soporta el agrupamiento de múltiples servidores Zabbix.</li>
<li>Usa una configuración activo/pasivo para el servidor Zabbix.</li>
<li>Se admite balanceo de carga a través de proxies de Zabbix.</li>
</ul>
<h2 id="preparativos">Preparativos</h2>
<p>Configurar un entorno de HA se considera avanzado. Antes de comenzar:</p>
<ul>
<li>Asegúrate de contar con tres máquinas virtuales:
<ul>
<li><strong>zabbix-ha1</strong> (192.168.0.1)</li>
<li><strong>zabbix-ha2</strong> (192.168.0.2)</li>
<li><strong>zabbix-ha-db</strong> (192.168.0.10) para la base de datos MySQL</li>
</ul>
</li>
<li>Configura una <strong>IP Virtual</strong> para el clúster: 192.168.0.5.</li>
</ul>
<div class="alert alert-note">
  <p class="alert-title">
    <span class="alert-icon alert-note-icon">
      <svg class="octicon" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">
        <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path>
      </svg>
      Note
    </span>
  </p>
  <p class="alert-text">• Esta configuración utiliza una única base de datos MySQL para Zabbix.<br><br>
• Configura SELinux/AppArmor y los firewalls según sea necesario para producción.<br><br>
• La sincronización de tiempo precisa entre los servidores es crítica. Utiliza herramientas como chrony o ntpd para mantener la configuración horaria precisa. Relojes de sistema desalineados pueden afectar negativamente el rendimiento de sistemas distribuidos y causar problemas con el monitoreo y las operaciones de la base de datos.</p>
</div>

<h2 id="configurando-la-base-de-datos">Configurando la Base de Datos</h2>
<ol>
<li>
<p>Inicia sesión en <strong>zabbix-ha-db</strong> e instala el repositorio de MariaDB:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">wget https://downloads.mariadb.com/MariaDB/mariadb_repo_setup  
</span></span><span class="line"><span class="ln">2</span><span class="cl">chmod +x mariadb_repo_setup  
</span></span><span class="line"><span class="ln">3</span><span class="cl">./mariadb_repo_setup  </span></span></code></pre></div></li>
<li>
<p>Instala el servidor MariaDB:</p>
<ul>
<li><strong>Sistemas basados en RHEL</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">dnf install mariadb-server  
</span></span><span class="line"><span class="ln">2</span><span class="cl">systemctl <span class="nb">enable</span> mariadb  
</span></span><span class="line"><span class="ln">3</span><span class="cl">systemctl start mariadb  </span></span></code></pre></div></li>
<li><strong>Sistemas basados en Ubuntu</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">apt install mariadb-server  
</span></span><span class="line"><span class="ln">2</span><span class="cl">systemctl <span class="nb">enable</span> mariadb  
</span></span><span class="line"><span class="ln">3</span><span class="cl">systemctl start mariadb  </span></span></code></pre></div></li>
</ul>
</li>
<li>
<p>Asegura MariaDB:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">mariadb-secure-installation  </span></span></code></pre></div></li>
<li>
<p>Crea la base de datos de Zabbix:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="n">mariadb</span><span class="w"> </span><span class="o">-</span><span class="n">u</span><span class="w"> </span><span class="n">root</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w">  
</span></span></span><span class="line"><span class="ln"> 2</span><span class="cl"><span class="w"></span><span class="k">create</span><span class="w"> </span><span class="k">database</span><span class="w"> </span><span class="n">zabbix</span><span class="w"> </span><span class="nb">character</span><span class="w"> </span><span class="k">set</span><span class="w"> </span><span class="n">utf8mb4</span><span class="w"> </span><span class="k">collate</span><span class="w"> </span><span class="n">utf8mb4_bin</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln"> 3</span><span class="cl"><span class="w"></span><span class="k">create</span><span class="w"> </span><span class="k">user</span><span class="w"> </span><span class="n">zabbix</span><span class="o">@</span><span class="s1">&#39;192.168.0.1&#39;</span><span class="w"> </span><span class="n">identified</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="s1">&#39;password&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln"> 4</span><span class="cl"><span class="w"></span><span class="k">create</span><span class="w"> </span><span class="k">user</span><span class="w"> </span><span class="n">zabbix</span><span class="o">@</span><span class="s1">&#39;192.168.0.2&#39;</span><span class="w"> </span><span class="n">identified</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="s1">&#39;password&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="w"></span><span class="k">create</span><span class="w"> </span><span class="k">user</span><span class="w"> </span><span class="n">zabbix</span><span class="o">@</span><span class="s1">&#39;192.168.0.5&#39;</span><span class="w"> </span><span class="n">identified</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="s1">&#39;password&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln"> 6</span><span class="cl"><span class="w"></span><span class="k">grant</span><span class="w"> </span><span class="k">all</span><span class="w"> </span><span class="k">privileges</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">zabbix</span><span class="p">.</span><span class="o">*</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="s1">&#39;zabbix&#39;</span><span class="o">@</span><span class="s1">&#39;192.168.0.1&#39;</span><span class="w"> </span><span class="n">identified</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="s1">&#39;password&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="w"></span><span class="k">grant</span><span class="w"> </span><span class="k">all</span><span class="w"> </span><span class="k">privileges</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">zabbix</span><span class="p">.</span><span class="o">*</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="s1">&#39;zabbix&#39;</span><span class="o">@</span><span class="s1">&#39;192.168.0.2&#39;</span><span class="w"> </span><span class="n">identified</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="s1">&#39;password&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln"> 8</span><span class="cl"><span class="w"></span><span class="k">grant</span><span class="w"> </span><span class="k">all</span><span class="w"> </span><span class="k">privileges</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">zabbix</span><span class="p">.</span><span class="o">*</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="s1">&#39;zabbix&#39;</span><span class="o">@</span><span class="s1">&#39;192.168.0.5&#39;</span><span class="w"> </span><span class="n">identified</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="s1">&#39;password&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln"> 9</span><span class="cl"><span class="w"></span><span class="k">set</span><span class="w"> </span><span class="k">global</span><span class="w"> </span><span class="n">log_bin_trust_function_creators</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln">10</span><span class="cl"><span class="w"></span><span class="n">quit</span><span class="p">;</span><span class="w">  </span></span></span></code></pre></div></li>
<li>
<p>Instala el módulo de scripts SQL de Zabbix:</p>
<ul>
<li><strong>Sistemas basados en RHEL</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">dnf install zabbix-sql-scripts  </span></span></code></pre></div></li>
<li><strong>Sistemas basados en Ubuntu</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">apt install zabbix-sql-scripts  </span></span></code></pre></div></li>
</ul>
</li>
<li>
<p>Importa la configuración inicial de la base de datos de Zabbix:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">zcat /usr/share/doc/zabbix-sql-scripts/mysql/server.sql.gz <span class="p">|</span> mysql --default-character-set<span class="o">=</span>utf8mb4 -u root -p zabbix  </span></span></code></pre></div></li>
<li>
<p>Deshabilita <code>log_bin_trust_function_creators</code>:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">mysql</span><span class="w"> </span><span class="o">-</span><span class="n">u</span><span class="w"> </span><span class="n">root</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w">  
</span></span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="w"></span><span class="k">set</span><span class="w"> </span><span class="k">global</span><span class="w"> </span><span class="n">log_bin_trust_function_creators</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="w"></span><span class="n">quit</span><span class="p">;</span><span class="w">  </span></span></span></code></pre></div></li>
</ol>
<h2 id="configurando-los-nodos-del-clúster-del-servidor-zabbix">Configurando los Nodos del Clúster del Servidor Zabbix</h2>
<ol>
<li>
<p>Agrega el repositorio de Zabbix en <strong>zabbix-ha1</strong> y <strong>zabbix-ha2</strong>:</p>
<ul>
<li><strong>Sistemas basados en RHEL</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">rpm -Uvh https://repo.zabbix.com/zabbix/7.0/rocky/9/x86_64/zabbix-release-7.0-2.el9.noarch.rpm  
</span></span><span class="line"><span class="ln">2</span><span class="cl">dnf clean all  </span></span></code></pre></div></li>
<li><strong>Sistemas basados en Ubuntu</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">wget https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_7.0-1+ubuntu22.04_all.deb  
</span></span><span class="line"><span class="ln">2</span><span class="cl">dpkg -i zabbix-release_7.0-1+ubuntu22.04_all.deb  
</span></span><span class="line"><span class="ln">3</span><span class="cl">apt update  </span></span></code></pre></div></li>
</ul>
</li>
<li>
<p>Instala la aplicación del servidor Zabbix:</p>
<ul>
<li><strong>Sistemas basados en RHEL</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">dnf install zabbix-server-mysql zabbix-selinux-policy  </span></span></code></pre></div></li>
<li><strong>Sistemas basados en Ubuntu</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">apt install zabbix-server-mysql  </span></span></code></pre></div></li>
</ul>
</li>
<li>
<p>Configura <strong>zabbix-ha1</strong>:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">vim /etc/zabbix/zabbix_server.conf  </span></span></code></pre></div><p>Agrega:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="ln">1</span><span class="cl">DBHost=192.168.0.10  
</span></span><span class="line"><span class="ln">2</span><span class="cl">DBPassword=password  
</span></span><span class="line"><span class="ln">3</span><span class="cl">HANodeName=zabbix-ha1  
</span></span><span class="line"><span class="ln">4</span><span class="cl">NodeAddress=192.168.0.1  </span></span></code></pre></div></li>
<li>
<p>Configura <strong>zabbix-ha2</strong>:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">vim /etc/zabbix/zabbix_server.conf  </span></span></code></pre></div><p>Agrega:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="ln">1</span><span class="cl">DBHost=192.168.0.10  
</span></span><span class="line"><span class="ln">2</span><span class="cl">DBPassword=password  
</span></span><span class="line"><span class="ln">3</span><span class="cl">HANodeName=zabbix-ha2  
</span></span><span class="line"><span class="ln">4</span><span class="cl">NodeAddress=192.168.0.2  </span></span></code></pre></div></li>
<li>
<p>Inicia los servidores Zabbix:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">systemctl <span class="nb">enable</span> zabbix-server  
</span></span><span class="line"><span class="ln">2</span><span class="cl">systemctl start zabbix-server  </span></span></code></pre></div></li>
</ol>
<h2 id="configurando-nginx-con-ha">Configurando NGINX con HA</h2>
<ol>
<li>
<p>Instala <strong>keepalived</strong> en <strong>zabbix-ha1</strong> y <strong>zabbix-ha2</strong>:</p>
<ul>
<li><strong>Sistemas basados en RHEL</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">dnf install -y keepalived  </span></span></code></pre></div></li>
<li><strong>Sistemas basados en Ubuntu</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">apt install keepalived  </span></span></code></pre></div></li>
</ul>
</li>
<li>
<p>Configura <strong>keepalived</strong> en <strong>zabbix-ha1</strong>:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">vim /etc/keepalived/keepalived.conf  </span></span></code></pre></div><p>Agrega:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="ln"> 1</span><span class="cl">vrrp_instance ZBX_1 {  
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">    state MASTER  
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    interface ens192  
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    virtual_router_id 51  
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    priority 244  
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    authentication {  
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">        auth_type PASS  
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">        auth_pass password  
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    }  
</span></span><span class="line"><span class="ln">10</span><span class="cl">    virtual_ipaddress {  
</span></span><span class="line"><span class="ln">11</span><span class="cl">        192.168.0.5/24  
</span></span><span class="line"><span class="ln">12</span><span class="cl">    }  
</span></span><span class="line"><span class="ln">13</span><span class="cl">}  </span></span></code></pre></div></li>
<li>
<p>Configura <strong>keepalived</strong> en <strong>zabbix-ha2</strong>:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">vim /etc/keepalived/keepalived.conf  </span></span></code></pre></div><p>Agrega:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="ln"> 1</span><span class="cl">vrrp_instance ZBX_1 {  
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">    state BACKUP  
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    interface ens192  
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    virtual_router_id 51  
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    priority 243  
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    authentication {  
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">        auth_type PASS  
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">        auth_pass password  
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    }  
</span></span><span class="line"><span class="ln">10</span><span class="cl">    virtual_ipaddress {  
</span></span><span class="line"><span class="ln">11</span><span class="cl">        192.168.0.5/24  
</span></span><span class="line"><span class="ln">12</span><span class="cl">    }  
</span></span><span class="line"><span class="ln">13</span><span class="cl">}  </span></span></code></pre></div></li>
</ol>
<p>4.</p>
<p>Instala el frontend de Zabbix:</p>
<ul>
<li><strong>Sistemas basados en RHEL</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">dnf install nginx zabbix-web-mysql zabbix-nginx-conf zabbix-selinux-policy  </span></span></code></pre></div></li>
<li><strong>Sistemas basados en Ubuntu</strong>:





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">apt install nginx zabbix-frontend-php zabbix-nginx-conf  </span></span></code></pre></div></li>
</ul>
<ol start="5">
<li>
<p>Configura NGINX:</p>
<ul>
<li><strong>RHEL</strong>: Edita <code>/etc/nginx/conf.d/zabbix.conf</code></li>
<li><strong>Ubuntu</strong>: Edita <code>/etc/zabbix/nginx.conf</code>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="ln">1</span><span class="cl">listen 80;  
</span></span><span class="line"><span class="ln">2</span><span class="cl">server_name 192.168.0.5;  </span></span></code></pre></div></li>
</ul>
</li>
<li>
<p>Inicia el servidor web y keepalived:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">systemctl <span class="nb">enable</span> nginx keepalived  
</span></span><span class="line"><span class="ln">2</span><span class="cl">systemctl start nginx keepalived  </span></span></code></pre></div></li>
<li>
<p>Configura el frontend de Zabbix a través de tu navegador navegando a:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="ln">1</span><span class="cl">http://192.168.0.5/  </span></span></code></pre></div></li>
</ol>
<h2 id="cómo-funciona">Cómo Funciona</h2>
<p>La configuración de HA de Zabbix incluye dos nodos (<strong>zabbix-ha1</strong> y <strong>zabbix-ha2</strong>) conectados a una sola base de datos (<strong>zabbix-ha-db</strong>) usando una VIP (<strong>192.168.0.5</strong>). HA asegura que:</p>
<ul>
<li>Si un nodo falla, el otro toma el control.</li>
<li>Keepalived monitorea NGINX para cambiar la VIP al nodo activo.</li>
</ul>
<p>Para una HA avanzada, considera usar una configuración de replicación maestro/maestro de MySQL. Aprende más en la <a href="https://mariadb.com/kb/en/standard-replication/">documentación de MariaDB</a>.</p>
<hr>
<p>Para concluir, en esta guía hemos ido a través de la instalación de Zabbix con alta disponibilidad para asegurar un monitoreo confiable y continuo.</p>
<p>Estate atento a mi próxima publicación, donde profundizaré en la configuración y personalización del monitoreo con Zabbix, creación de alertas y disparadores, construcción de plantillas estructuradas y visualización de tus datos a través de paneles, informes y más.</p>
</div>]]></content:encoded>
    </item>
    <item>
      <title>Implementando Wazuh (SIEM)</title>
      <link>https://gtello.github.io/es/projects/wazuh/</link>
      <pubDate>Wed, 13 Nov 2024 19:10:00 +0000</pubDate><author>gabrieltello10@hotmail.com (Gabriel Tello)</author>
      <guid>https://gtello.github.io/es/projects/wazuh/</guid>
      <description>&lt;div style=&#34;text-align: justify;&#34;&gt;&#xD;&#xA;&lt;p&gt;Este proyecto tiene como objetivo mostrar la configuración e integración de &lt;a href=&#34;https://wazuh.com/&#34;&gt;Wazuh&lt;/a&gt; en un entorno profesional para mejorar las operaciones de seguridad. Aquí, vamos a ver cómo instalar, gestionar agentes, configurar de alertas para luego integrarlas con Microsoft Teams y, finalmente, pruebas con Atomic Red Team para validación.&lt;/p&gt;&#xA;&lt;h2 id=&#34;instalación&#34;&gt;Instalación&lt;/h2&gt;&#xA;&lt;p&gt;Para alojar nuestro servidor de Wazuh, usaremos una instancia en AWS EC2 con Ubuntu 24.04. Esta configuración nos da flexibilidad, escalabilidad y facilidad de mantenimiento en una infraestructura basada en la nube.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<div style="text-align: justify;">
<p>Este proyecto tiene como objetivo mostrar la configuración e integración de <a href="https://wazuh.com/">Wazuh</a> en un entorno profesional para mejorar las operaciones de seguridad. Aquí, vamos a ver cómo instalar, gestionar agentes, configurar de alertas para luego integrarlas con Microsoft Teams y, finalmente, pruebas con Atomic Red Team para validación.</p>
<h2 id="instalación">Instalación</h2>
<p>Para alojar nuestro servidor de Wazuh, usaremos una instancia en AWS EC2 con Ubuntu 24.04. Esta configuración nos da flexibilidad, escalabilidad y facilidad de mantenimiento en una infraestructura basada en la nube.</p>
<p><img alt="Especificaciones de EC2" src="/images/posts/wazuh/ec2-specs.png"> <center><b>Especificaciones de la instancia en EC2</b></center></p>
<p>Una vez que nuestro servidor esté actualizado, ejecutamos el siguiente comando para instalar Wazuh:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">curl -sO https://packages.wazuh.com/4.9/wazuh-install.sh <span class="o">&amp;&amp;</span> sudo bash ./wazuh-install.sh -a</span></span></code></pre></div><p>Esto se encargará de la configuración e instalación de todos los componentes principales. El proceso comienza verificando los requisitos del sistema e instalando dependencias. Luego, el script configura la seguridad de Wazuh generando certificados para los componentes de root, administrador, indexador, Filebeat y panel de control, asegurando el manejo seguro de datos en todo el ecosistema.</p>
<p>Una vez configuradas las dependencias y configuraciones, el script instala y arranca secuencialmente los servicios clave de Wazuh: el Wazuh Indexer para almacenamiento de datos, el Wazuh Manager para detección de amenazas, Filebeat para el reenvío de logs y el Wazuh Dashboard para monitoreo. El panel es accesible en <code>https://&lt;ip-servidor-wazuh&gt;:443</code> con las credenciales proporcionadas al final del script de instalación.</p>
<p><img alt="Configuración de Wazuh" src="/images/posts/wazuh/wazuh-setup-loading.png"> <center><b>Configuración de Wazuh</b></center></p>
<p>Cuando iniciamos sesión en nuestro panel de control de Wazuh por primera vez, debemos comenzar configurando grupos para facilitar la gestión de agentes.</p>
<p>Para crear grupos de agentes desde el panel de Wazuh:</p>
<ol>
<li>Navega a <strong>Management</strong> &gt; <strong>Groups</strong> y haz clic en el botón <strong>Add new group</strong>.</li>
<li>Introduce un nombre para el grupo de agentes y haz clic en el botón <strong>Save new group</strong>.</li>
</ol>
<p><img alt="Grupo de agentes" src="/images/posts/wazuh/agent-group.gif"> <center><b>Agregando un nuevo grupo</b></center></p>
<p>Ahora pasaremos al despliegue de nuestros agentes.</p>
<h2 id="despliegue-de-agentes">Despliegue de Agentes</h2>
<p>Para agregar un nuevo agente, hacemos clic en el menú y vamos a <strong>Endpoints Summary</strong> y seleccionamos <strong>Deploy new agent</strong>. Sigue las instrucciones del asistente para desplegar un agente:</p>
<p><img alt="Configuración del agente Wazuh" src="/images/posts/wazuh/wazuh-agent-setup.png"> <center><b>Agregando un nuevo agente</b></center></p>
<p>Si estás configurando un agente de Wazuh en una instancia EC2 de AWS y experimentas problemas de conectividad, revisa la configuración del grupo de seguridad aplicado a tu instancia y asegúrate de que el Security Group adjunto a tu instancia de Wazuh manager permita el tráfico entrante en estos puertos:</p>
<ul>
<li><strong>1514/TCP</strong> – Comunicación del agente</li>
<li><strong>1515/TCP</strong> – Registro del agente</li>
<li><strong>55000/TCP</strong> – Acceso API</li>
</ul>
<p><img alt="Primer agente añadido" src="/images/posts/wazuh/first-agent-added.png"> <center><b>Primer agente añadido</b></center></p>
<p>Añadí como primer agente una instancia de AWS Lightsail que quiero monitorear. Ahora podemos avanzar a configuraciones adicionales, como detección de vulnerabilidades y rootkits, monitoreo de integridad de archivos, etc.</p>
<h2 id="detección-de-vulnerabilidades">Detección de Vulnerabilidades</h2>
<p>A la fecha de publicación, Wazuh viene por defecto con el módulo de detección de vulnerabilidades activado. Para confirmarlo, revisa el <a href="https://documentation.wazuh.com/current/user-manual/reference/ossec-conf/index.html">archivo de configuración</a> ubicado en <code>/var/ossec/etc/ossec.conf</code></p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="nt">&lt;vulnerability-detection&gt;</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">   <span class="nt">&lt;enabled&gt;</span>yes<span class="nt">&lt;/enabled&gt;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">   <span class="nt">&lt;index-status&gt;</span>yes<span class="nt">&lt;/index-status&gt;</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">   <span class="nt">&lt;feed-update-interval&gt;</span>60m<span class="nt">&lt;/feed-update-interval&gt;</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl"><span class="nt">&lt;/vulnerability-detection&gt;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">
</span></span><span class="line"><span class="ln"> 7</span><span class="cl"><span class="nt">&lt;indexer&gt;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">   <span class="nt">&lt;enabled&gt;</span>yes<span class="nt">&lt;/enabled&gt;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">   <span class="nt">&lt;hosts&gt;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">      <span class="nt">&lt;host&gt;</span>https://0.0.0.0:9200<span class="nt">&lt;/host&gt;</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl">   <span class="nt">&lt;/hosts&gt;</span>
</span></span><span class="line"><span class="ln">12</span><span class="cl">   <span class="nt">&lt;ssl&gt;</span>
</span></span><span class="line"><span class="ln">13</span><span class="cl">      <span class="nt">&lt;certificate_authorities&gt;</span>
</span></span><span class="line"><span class="ln">14</span><span class="cl">         <span class="nt">&lt;ca&gt;</span>/etc/filebeat/certs/root-ca.pem<span class="nt">&lt;/ca&gt;</span>
</span></span><span class="line"><span class="ln">15</span><span class="cl">      <span class="nt">&lt;/certificate_authorities&gt;</span>
</span></span><span class="line"><span class="ln">16</span><span class="cl">      <span class="nt">&lt;certificate&gt;</span>/etc/filebeat/certs/filebeat.pem<span class="nt">&lt;/certificate&gt;</span>
</span></span><span class="line"><span class="ln">17</span><span class="cl">      <span class="nt">&lt;key&gt;</span>/etc/filebeat/certs/filebeat-key.pem<span class="nt">&lt;/key&gt;</span>
</span></span><span class="line"><span class="ln">18</span><span class="cl">   <span class="nt">&lt;/ssl&gt;</span>
</span></span><span class="line"><span class="ln">19</span><span class="cl"><span class="nt">&lt;/indexer&gt;</span></span></span></code></pre></div><p>Para verificar las vulnerabilidades detectadas en nuestros agentes, vamos a <strong>Threat Intelligence</strong> &gt; <strong>Vulnerability Detection</strong>.</p>
<p><img alt="Vulnerabilidades detectadas" src="/images/posts/wazuh/wazuh-vulns.png"> <center><b>Vulnerabilidades detectadas</b></center></p>
<h2 id="alertas">Alertas</h2>
<p>El configurar alertas en Wazuh involucra establecer umbrales de alerta, enviar alertas a sistemas externos y gestionar la escalada y filtrado de alertas.</p>
<h3 id="umbrales">Umbrales</h3>
<p>Wazuh asigna un nivel de gravedad (de 0 a 15) a cada evento en base a <a href="https://documentation.wazuh.com/current/user-manual/ruleset/rules/rules-classification.html">reglas</a> predefinidas. Por defecto, Wazuh activa alertas para eventos con un nivel de gravedad de 3 o superior. Puedes ajustar este umbral para controlar qué alertas se generan.</p>
<p>Para modificarlo, ve al archivo <code>ossec.conf</code>, ubica la sección <code>&lt;alerts&gt;</code> y ajusta el valor de <code>&lt;log_alert_level&gt;</code> al umbral deseado.</p>
<p>Por ejemplo, para establecer el nivel mínimo de alerta en 5:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="ln">1</span><span class="cl"><span class="nt">&lt;alerts&gt;</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">  <span class="nt">&lt;log_alert_level&gt;</span>5<span class="nt">&lt;/log_alert_level&gt;</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="nt">&lt;/alerts&gt;</span></span></span></code></pre></div><p>Después de realizar cambios en el archivo de configuración, reinicia Wazuh manager para aplicar los nuevos ajustes con:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">sudo systemctl restart wazuh-manager</span></span></code></pre></div><h3 id="filtrado-de-alertas">Filtrado de Alertas</h3>
<p>Para optimizar el sistema de alertas, se puede implementar reglas de filtrado de alertas en Wazuh para suprimir eventos específicos, como intentos de fuerza bruta SSH hacia usuarios inexistentes. Sigue estos pasos:</p>
<ol>
<li>
<p><strong>Identifica el ID de la Regla</strong>: Determina el ID de la regla asociada con la alerta que deseas anular. Puedes encontrar este ID en los registros de alertas o revisando el conjunto de reglas de Wazuh.</p>
<ul>
<li>
<p>Para intentos de fuerza bruta en SSH en Linux, puedes encontrar estos eventos con <code>rule.id:(5551 OR 5712)</code>. Otras reglas relacionadas son <code>5710</code>, <code>5711</code>, <code>5716</code>, <code>5720</code>, <code>5503</code>, <code>5504</code>.</p>
</li>
<li>
<p>Para fallos de inicio de sesión en Windows, puedes encontrar esos eventos con <code>rule.id:(60122 OR 60204)</code>.</p>
</li>
</ul>
</li>
<li>
<p><strong>Crea una Regla Local para Anular Alertas</strong>: Creando una regla local con un nivel de severidad más bajo, puedes evitar que la alerta sea enviada.</p>
<ul>
<li>
<p>Navega al directorio de reglas de Wazuh, ubicado en <code>/var/ossec/etc/rules/local_rules.xml</code>.</p>
</li>
<li>
<p>Agrega la siguiente regla para suprimir la alerta específica:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="ln">1</span><span class="cl"><span class="nt">&lt;group</span> <span class="na">name=</span><span class="s">&#34;sshd,&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">  <span class="nt">&lt;rule</span> <span class="na">id=</span><span class="s">&#34;100002&#34;</span> <span class="na">level=</span><span class="s">&#34;0&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">    <span class="nt">&lt;if_sid&gt;</span>5716<span class="nt">&lt;/if_sid&gt;</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl">    <span class="nt">&lt;description&gt;</span>Ignorar alertas de fuerza bruta SSH hacia usuarios inexistentes<span class="nt">&lt;/description&gt;</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl">  <span class="nt">&lt;/rule&gt;</span>
</span></span><span class="line"><span class="ln">6</span><span class="cl"><span class="nt">&lt;/group&gt;</span></span></span></code></pre></div><p>Esta regla establece el nivel de alerta en 0 para el evento especificado, suprimiéndolo. Para un ejemplo más detallado, consulta el <a href="https://github.com/ossec/ossec-hids/blob/master/etc/rules/local_rules.xml">archivo de ejemplo de ossec</a>.</p>
</li>
</ul>
</li>
<li>
<p><strong>Reinicia el Administrador de Wazuh</strong>: Aplica los cambios reiniciando Wazuh manager:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">sudo systemctl restart wazuh-manager</span></span></code></pre></div></li>
</ol>
<h3 id="reenvío-de-alertas">Reenvío de Alertas</h3>
<p>Wazuh puede reenviar alertas a varios sistemas externos, como servidores syslog, direcciones de correo electrónico o plataformas de colaboración como Microsoft Teams.</p>
<ul>
<li>Para reenviar alertas a un servidor syslog, agrega un bloque <code>&lt;syslog_output&gt;</code> en el archivo <code>ossec.conf</code>:</li>
</ul>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="ln">1</span><span class="cl"><span class="nt">&lt;syslog_output&gt;</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">  <span class="nt">&lt;server&gt;</span>192.168.1.241<span class="nt">&lt;/server&gt;</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">  <span class="nt">&lt;level&gt;</span>9<span class="nt">&lt;/level&gt;</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="nt">&lt;/syslog_output&gt;</span></span></span></code></pre></div><p>Esta configuración envía alertas con un nivel de gravedad superior a 9 al servidor syslog especificado.</p>
<ul>
<li>Para recibir alertas por correo electrónico, configura los ajustes de correo en la sección <code>&lt;global&gt;</code> de <code>ossec.conf</code>:</li>
</ul>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="ln"> 1</span><span class="cl"><span class="nt">&lt;ossec_config&gt;</span>
</span></span><span class="line"><span class="ln"> 2</span><span class="cl">  <span class="nt">&lt;global&gt;</span>
</span></span><span class="line"><span class="ln"> 3</span><span class="cl">    <span class="nt">&lt;email_notification&gt;</span>yes<span class="nt">&lt;/email_notification&gt;</span>
</span></span><span class="line"><span class="ln"> 4</span><span class="cl">    <span class="nt">&lt;email_to&gt;</span>me@test.com<span class="nt">&lt;/email_to&gt;</span>
</span></span><span class="line"><span class="ln"> 5</span><span class="cl">    <span class="nt">&lt;smtp_server&gt;</span>mail.test.com<span class="nt">&lt;/smtp_server&gt;</span>
</span></span><span class="line"><span class="ln"> 6</span><span class="cl">    <span class="nt">&lt;email_from&gt;</span>wazuh@test.com<span class="nt">&lt;/email_from&gt;</span>
</span></span><span class="line"><span class="ln"> 7</span><span class="cl">  <span class="nt">&lt;/global&gt;</span>
</span></span><span class="line"><span class="ln"> 8</span><span class="cl">  <span class="nt">&lt;alerts&gt;</span>
</span></span><span class="line"><span class="ln"> 9</span><span class="cl">    <span class="nt">&lt;email_alert_level&gt;</span>10<span class="nt">&lt;/email_alert_level&gt;</span>
</span></span><span class="line"><span class="ln">10</span><span class="cl">  <span class="nt">&lt;/alerts&gt;</span>
</span></span><span class="line"><span class="ln">11</span><span class="cl"><span class="nt">&lt;/ossec_config&gt;</span></span></span></code></pre></div><p>Esta configuración envía alertas por correo para eventos con un nivel de gravedad de 10 o superior.</p>
<h4 id="integración-con-teams">Integración con Teams</h4>
<p>Para integrar las alertas de Wazuh con Microsoft Teams, tenemos varias opciones: usar el <a href="https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook">Webhook de Teams</a>, <a href="https://zapier.com/">Zapier</a>, <a href="https://www.make.com/en">Make.com</a> u otra plataforma similar para enviar alertas a un canal de Teams mediante un webhook. Esto implica crear un script de integración personalizado y configurarlo en <code>ossec.conf</code>.</p>
<p>Usaré <a href="https://github.com/redanthrax/wazuh-teams-integration">esta</a> integración ya configurada con Teams, creada por 

<a href="https://github.com/redanthrax">@redanthrax</a>.</p>
<p>Una vez configurada la integración en el servidor Wazuh, simplemente configúralo así:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="ln">1</span><span class="cl"><span class="nt">&lt;integration&gt;</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl">  <span class="nt">&lt;name&gt;</span>custom-teams<span class="nt">&lt;/name&gt;</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">  <span class="nt">&lt;level&gt;</span>3<span class="nt">&lt;/level&gt;</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl">  <span class="nt">&lt;hook_url&gt;</span>{WEBHOOK URL}<span class="nt">&lt;/hook_url&gt;</span> 
</span></span><span class="line"><span class="ln">5</span><span class="cl">  <span class="nt">&lt;alert_format&gt;</span>json<span class="nt">&lt;/alert_format&gt;</span> 
</span></span><span class="line"><span class="ln">6</span><span class="cl"><span class="nt">&lt;/integration&gt;</span></span></span></code></pre></div><p>Ahora recibiremos alertas en un canal de Teams en cada alerta de nivel 3:</p>
<p><img alt="Notificación de Teams" src="/images/posts/wazuh/teams-alert.png"> <center><b>Notificación de Teams</b></center></p>
<p>Para extender estas alertas, podemos implementar un sistema SOAR para automatizar la priorización, crear procesos de escalamiento, desarrollar playbooks y respuestas a incidentes. Podríamos usar otra buena solución de código abierto como <a href="https://github.com/shuffle/shuffle/blob/main/.github/install-guide.md">Shuffle</a> para esto.</p>
<h2 id="pruebas-y-validación">Pruebas y Validación</h2>
<p>Para validar nuestra implementación de Wazuh y asegurarnos de que las alertas se activen correctamente, usaremos <a href="https://www.atomicredteam.io/">Atomic Red Team</a>, un framework versátil y de código abierto que nos permite simular técnicas de ataque reales mapeadas al marco ATT&amp;CK de MITRE. Específicamente, utilizaremos el módulo PowerShell <a href="https://github.com/redcanaryco/invoke-atomicredteam">Invoke-Atomic</a>, que se puede ejecutar en Windows, MacOS y Linux, siendo una herramienta ideal para probar en todos nuestros agentes.</p>
<h3 id="configuración-de-atomic-red-team">Configuración de Atomic Red Team</h3>
<p>Hagamos algunas pruebas en nuestro servidor Ubuntu. Primero instalaremos PowerShell en Linux con <code>sudo snap install powershell --classic</code> y luego ejecutaremos <code>pwsh</code>. Una vez dentro de PowerShell, podemos proceder a instalar tanto el framework de ejecución como la carpeta de pruebas atómicas, que contiene las definiciones de las pruebas; los comandos que el marco de ejecución ejecutará.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="ln">1</span><span class="cl"><span class="nb">IEX </span><span class="p">(</span><span class="nb">IWR </span><span class="s1">&#39;https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/install-atomicredteam.ps1&#39;</span> <span class="n">-UseBasicParsing</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="nb">Install-AtomicRedTeam</span> <span class="n">-getAtomics</span></span></span></code></pre></div><p>Ahora podemos utilizar la función <code>Invoke-AtomicTest</code> para realizar pruebas de seguridad controladas. A continuación pongo ejemplos de técnicas específicas de MITRE ATT&amp;CK que podemos ejecutar para probar nuestra configuración:</p>
<ul>
<li>
<p><strong>Prueba para Transferencia de Herramientas de Ingreso (T1105)</strong>: Simula un intento de transferir archivos desde una fuente remota a un entorno, lo que podría ser indicativo de una descarga de malware o exfiltración de datos. Esta actividad debería activar alertas si Wazuh monitorea adecuadamente la actividad de red y movimiento de archivos.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="ln">1</span><span class="cl"><span class="nb">Invoke-AtomicTest</span> <span class="n">T1105</span></span></span></code></pre></div></li>
<li>
<p><strong>Prueba de Volcado de Credenciales (T1003)</strong>: Ejecuta una simulación de volcado de credenciales para verificar si Wazuh captura eventos potenciales de acceso a credenciales.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="ln">1</span><span class="cl"><span class="nb">Invoke-AtomicTest</span> <span class="n">T1003</span><span class="p">.</span><span class="py">008</span> <span class="c"># OS Credential Dumping: /etc/passwd and /etc/shadow</span></span></span></code></pre></div></li>
<li>
<p><strong>Prueba de Creación de Tareas Programadas (T1053)</strong>: Usa tareas programadas para simular técnicas de persistencia y verificar si Wazuh alerta sobre la creación de tareas.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="ln">1</span><span class="cl"><span class="nb">Invoke-AtomicTest</span> <span class="n">T1053</span><span class="p">.</span><span class="py">003</span> <span class="c"># Scheduled Task/Job: Cron</span></span></span></code></pre></div></li>
<li>
<p><strong>Prueba de Ejecución de Intérprete de Comandos y Scripts (T1059)</strong>: Simula actividad de scripting sospechosa que Wazuh debería detectar según los ajustes de umbral.</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="ln">1</span><span class="cl"><span class="nb">Invoke-AtomicTest</span> <span class="n">T1059</span><span class="p">.</span><span class="py">004</span> <span class="c"># Command and Scripting Interpreter: Unix Shell</span></span></span></code></pre></div></li>
</ul>
<h3 id="verificación-de-alertas-en-wazuh">Verificación de Alertas en Wazuh</h3>
<p>Después de ejecutar cada prueba, navegaremos al panel de Wazuh para verificar las alertas generadas. Podemos ver los eventos correspondientes a cada prueba de Atomic Red Team en <strong>Threat Intelligence</strong> &gt; <strong>MITRE ATT&amp;CK</strong>. Podemos revisar los detalles para confirmar que las alertas coinciden con los umbrales configurados según lo previsto.</p>
<p><img alt="Pruebas de MITRE ATT&amp;CK detectadas" src="/images/posts/wazuh/mitre.png"> <center><b>Pruebas de MITRE ATT&amp;CK detectadas</b></center></p>
<p>Al completar la implementación, configuración y validación de Wazuh, hemos creado una configuración de SIEM sólida y proactiva capaz de detectar, alertar y responder a eventos de seguridad de manera efectiva. Con integraciones para una alerta fluida, monitoreo de vulnerabilidades y pruebas con Atomic Red Team, este despliegue de Wazuh fortalece nuestra postura de seguridad organizacional. A medida que evolucionan las amenazas, esta configuración puede personalizarse aún más para satisfacer las necesidades dinámicas de las operaciones de seguridad modernas, convirtiéndola en un activo valioso en el conjunto de herramientas de nuestro SOC. Este proyecto destaca el poder de las soluciones de código abierto como Wazuh para construir un entorno de ciberseguridad resiliente y adaptable.</p>
<div>]]></content:encoded>
    </item>
  </channel>
</rss>
