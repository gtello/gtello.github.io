<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ftp on Gabriel Tello</title>
    <link>https://gtello.github.io/es/tags/ftp/</link>
    <description>Recent content in Ftp on Gabriel Tello</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-EC</language>
    <managingEditor>gabrieltello10@hotmail.com (Gabriel Tello)</managingEditor>
    <webMaster>gabrieltello10@hotmail.com (Gabriel Tello)</webMaster>
    <copyright>[Gabriel Tello](https://github.com/gtello) © 2024</copyright>
    <lastBuildDate>Thu, 24 Oct 2024 21:22:00 +0000</lastBuildDate>
    <atom:link href="https://gtello.github.io/es/tags/ftp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Máquina Academy</title>
      <link>https://gtello.github.io/es/writeups/academy/</link>
      <pubDate>Thu, 24 Oct 2024 21:22:00 +0000</pubDate><author>gabrieltello10@hotmail.com (Gabriel Tello)</author>
      <guid>https://gtello.github.io/es/writeups/academy/</guid>
      <description>&lt;div style=&#34;text-align: justify;&#34;&gt;&#xD;&#xA;Esta es una guía paso a paso presentada en formato de reporte profesional sobre una prueba de penetración realizada en una máquina Debian 10 llamada Academy, que en este caso cambió el nombre de la máquina a Monkey. &#xD;&#xA;&lt;h2 id=&#34;resumen-ejecutivo&#34;&gt;Resumen ejecutivo&lt;/h2&gt;&#xA;&lt;p&gt;Se llevó a cabo un análisis de seguridad en la máquina Monkey (Debian 10). Se identificaron varias vulnerabilidades, comenzando con un servicio FTP mal configurado que permitía el inicio de sesión anónimo, lo que facilitó el acceso a información crítica, como credenciales y un hash de contraseña. A través de fuerza bruta en los directorios web y un ataque de subida de archivos no restringido, se consiguió hacer una conexión no autorizada al servidor. Posteriormente, se escaló el acceso a usuario administrador, modificando un script en bash que se ejecutaba con privilegios elevados.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<div style="text-align: justify;">
Esta es una guía paso a paso presentada en formato de reporte profesional sobre una prueba de penetración realizada en una máquina Debian 10 llamada Academy, que en este caso cambió el nombre de la máquina a Monkey. 
<h2 id="resumen-ejecutivo">Resumen ejecutivo</h2>
<p>Se llevó a cabo un análisis de seguridad en la máquina Monkey (Debian 10). Se identificaron varias vulnerabilidades, comenzando con un servicio FTP mal configurado que permitía el inicio de sesión anónimo, lo que facilitó el acceso a información crítica, como credenciales y un hash de contraseña. A través de fuerza bruta en los directorios web y un ataque de subida de archivos no restringido, se consiguió hacer una conexión no autorizada al servidor. Posteriormente, se escaló el acceso a usuario administrador, modificando un script en bash que se ejecutaba con privilegios elevados.</p>
<p>Esto permitió obtener control total del servidor y acceder a información confidencial. Se detectaron múltiples problemas de configuración y control de acceso que deben ser corregidos para mejorar la seguridad de la máquina y sus servicios.</p>
<h2 id="reconocimiento">Reconocimiento</h2>
<p>Se realizó un escaneo de red utilizando la herramienta nmap para identificar puertos y servicios abiertos en la máquina.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image1.png" alt="Resultado nmap" />
</div>
<center><em>Figura 1:</em> Resultado nmap</center>
<h3 id="resultado-del-reconocimiento">Resultado del reconocimiento</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: left">Sistema Operativo</th>
          <th style="text-align: left">Dirección IP</th>
          <th style="text-align: left">Puertos Abiertos</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">Debian 10</td>
          <td style="text-align: left">192.168.138.128</td>
          <td style="text-align: left">21 (FTP), 22 (SSH), 80 (HTTP)</td>
      </tr>
  </tbody>
</table>
<h2 id="explotación">Explotación</h2>
<p>El escaneo de nmap mostró que el servicio FTP en el puerto 21 permitía un inicio de sesión anónimo, por lo que se realizó la prueba.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image2.png" alt="inicio sesion ftp" />
</div>
<center><em>Figura 2:</em> Inicio de sesión FTP como usuario anónimo</center>
<p>La conexión a FTP se encontró abierta para el usuario anonymous, lo que permitió acceder a una nota dejada en el servidor.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image3.png" alt="nota desarrollador" />
</div>
<center><em>Figura 3:</em> Nota del desarrollador</center>
<p>Se pudo observar que el desarrollador dejó una nota en el servidor FTP, en donde se mencionó que tuvo que recurrir a usar una sentencia SQL para la creación de un nuevo usuario para el sitio web de la academia. El valor en el campo <code>password</code> es un hash MD5, se procedió a crackear el hash en hashcat.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image4.png" alt="resultado hashcat 1" />
    <img src="/images/posts/academy/image4_1.png" alt="resultado hashcat 2" />
</div>
<center><em>Figura 4:</em> Resultado hashcat</center>
<p>El crackeo del hash fue exitoso, y se determinó que la contraseña del usuario <code>HackerMentor</code> es <code>junior01</code>. Para proceder, se empezó a analizar el puerto 80 abierto que sugería que había una página web sirviendo contenido desde la máquina.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image5.png" alt="apache web server" />
</div>
<center><em>Figura 5:</em> Servicio de Apache Web Server</center>
<p>Se encontró la página web por defecto de Apache, lo que nos confirma que esta máquina está alojando un servicio web. Se procedió a hacer fuerza bruta en los directorios web.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image6.png" alt="wfuzz" />
</div>
<center><em>Figura 6:</em> Fuerza bruta en directorios web con wfuzz</center>
<p>Se descubrieron los directorios web, uno de <code>/phpmyadmin</code> y un directorio <code>/monkey</code>.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image7.png" alt="portal de academy" />
</div>
<center><em>Figura 7:</em> Portal de inicio de sesión de Academy</center>
<p>Se utilizaron las credenciales descubiertas anteriormente, y se consiguió iniciar sesión dentro del portal de Monkey. Se procedió a revisar detenidamente esta página web y se encontró un apartado de inscripción de estudiantes, el cual permitía hacer subida de imágenes. Se probó un ataque llamado <a href="https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload">subida de archivos no restringida</a> para de esta manera intentar ejecutar código PHP en el servidor web y conseguir un reverse shell.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image8.png" alt="código php" />
</div>
<center><em>Figura 8:</em> Código para reverse shell en PHP</center>
<p>Se subió este archivo .php al servidor y como previamente se hizo una prueba subiendo un archivo de imagen, se descubrió que la ruta donde quedan alojadas las imágenes es <code>http://192.168.138.128/monkey/studentphoto/imagen.jpg</code>. Una vez subida la imagen se ejecutó el código y se abrió una conexión con netcat en el puerto 1234.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image9.png" alt="conexión reverse shell" />
</div>
<center><em>Figura 9:</em> Conexión de tipo reverse shell establecida</center>
<p>El exploit funcionó correctamente y se consiguió acceso al servidor a través del usuario www-data, para hacer escalación de privilegios, se utilizó el script <a href="https://github.com/peass-ng/PEASS-ng/tree/master/linPEAS">LINpeas.sh</a>. Para realizar la transferencia del archivo hacia el servidor, se creó un servidor HTTP básico con Python con el comando python3 -m http.server 80 para descargar el archivo desde el servidor. Se ejecutó el script para descubrir vías para escalación de permisos y se hicieron los siguientes hallazgos.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image10.png" alt="contraseña mysql" />
</div>
<center><em>Figura 10:</em> Contraseña en texto plano de base de datos MySQL</center>
<p>Una vez encontrada la contraseña se intentó usar en conjunto con el usuario ya conocido dentro del portal web de la academia para conectarse a ese usuario mediante SSH.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image11.png" alt="ssh session" />
</div>
<center><em>Figura 11:</em> Conexión por SSH al usuario hackermentor</center>
<p>Se encontró una bandera y un script en bash llamado backup.sh que hace un respaldo a los archivos del sitio web de la academia. Se usó el comando <code>ls -l</code> y se nota que esta script se ejecuta a través del usuario administrador, revisando con <code>crontab</code> y <code>systemd</code> no se pudo determinar si este script se encuentra automatizado, para confirmación se utilizó el programa <a href="https://github.com/DominicBreuker/pspy">pspy</a>, que sirve para monitorear procesos en Linux sin permisos root.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image12.png" alt="monitoreo de procesos" />
</div>
<center><em>Figura 12:</em> Monitoreo de procesos con pspy mostrando la ejecución del script</center>
<p>Se pudo observar que el script está siendo ejecutado como usuario root. Debido a que el usuario <code>hackermentor</code> tiene permisos para editar este archivo, se pudo modificar este script para hacer que se ejecute un reverse shell, y ya que este script se ejecuta como usuario root, se obtuvo conexión a la máquina como usuario administrador.</p>
<div style="text-align: center;">
  <img src="/images/posts/academy/image13.png" alt="backup.sh modificado" />
</div>
<center><em>Figura 13:</em> backup.sh modificado</center>
<pre>

</pre>
<div style="text-align: center;">
  <img src="/images/posts/academy/image14.png" alt="conexión a root" />
</div>
<center><em>Figura 14:</em> Conexión a usuario root</center>
<h2 id="herramientas-utilizadas">Herramientas utilizadas</h2>
<table>
  <thead>
      <tr>
          <th style="text-align: left">Herramienta</th>
          <th style="text-align: left">Descripción</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">Nmap</td>
          <td style="text-align: left">Utilizada para el escaneo de red y detección de puertos y servicios abiertos en la máquina objetivo.</td>
      </tr>
      <tr>
          <td style="text-align: left">hashcat</td>
          <td style="text-align: left">Utilizada para crackear el hash MD5 obtenido del servidor FTP.</td>
      </tr>
      <tr>
          <td style="text-align: left">wfuzz</td>
          <td style="text-align: left">Usada para realizar fuerza bruta en los directorios web, descubriendo rutas sensibles.</td>
      </tr>
      <tr>
          <td style="text-align: left">pspy</td>
          <td style="text-align: left">Programa utilizado para monitorear procesos en Linux sin necesidad de permisos root.</td>
      </tr>
      <tr>
          <td style="text-align: left">LinPEAS</td>
          <td style="text-align: left">Script utilizado para identificar potenciales vías de escalación de privilegios en el servidor.</td>
      </tr>
  </tbody>
</table>
<h2 id="conclusión">Conclusión</h2>
<p>Durante este análisis de seguridad, se descubrieron varias vulnerabilidades críticas en la máquina Monkey. El acceso inicial se logró a través de un servicio FTP mal configurado que permitía inicios de sesión anónimos, lo que facilitó el acceso a archivos sensibles. A partir de ahí, se descubrieron credenciales de usuario que, junto con otros ataques, posibilitaron el acceso a la web y la posterior ejecución de código remoto en el servidor. La falta de restricciones en la subida de archivos y la presencia de un script ejecutado con permisos elevados sin las debidas protecciones permitió escalación de privilegios hasta obtener acceso como root. La combinación de una mala gestión de permisos, configuraciones inseguras y la falta de controles robustos de autenticación permitió que se comprometa completamente el sistema.</p>
<h2 id="recomendaciones">Recomendaciones</h2>
<p>Para mitigar las vulnerabilidades identificadas, se debe deshabilitar el inicio de sesión anónimo en el servicio FTP y restringir el acceso solo a usuarios autenticados. Asegurar que las contraseñas nunca sean almacenadas en texto plano y que los hashes utilicen algoritmos más robustos.
En cuanto a la escalación de privilegios, es necesario revisar y restringir los permisos de usuarios sobre scripts críticos como <code>backup.sh</code>, evitando que usuarios no privilegiados puedan modificarlos. También es recomendable realizar un monitoreo continuo del sistema con herramientas como pspy para detectar actividades anómalas en los procesos.</p>
</div>
]]></content:encoded>
    </item>
  </channel>
</rss>
